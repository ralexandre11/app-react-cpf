[{"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/index.js":"1","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/App.js":"2","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/reportWebVitals.js":"3","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/pages/NotFound.js":"4","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/pages/Main.js":"5","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/context/MyProvider.js":"6","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/context/MyContext.js":"7","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/components/CpfList.js":"8","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/components/Header.js":"9","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/pages/Welcome.js":"10","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/components/FormCpf.js":"11","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/services/CpfService.js":"12","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/services/ApiService.js":"13"},{"size":245,"mtime":1608667514139,"results":"14","hashOfConfig":"15"},{"size":830,"mtime":1608747046711,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608592374226,"results":"17","hashOfConfig":"15"},{"size":154,"mtime":1608595755407,"results":"18","hashOfConfig":"15"},{"size":230,"mtime":1608748889313,"results":"19","hashOfConfig":"15"},{"size":743,"mtime":1608690250182,"results":"20","hashOfConfig":"15"},{"size":102,"mtime":1608594536042,"results":"21","hashOfConfig":"15"},{"size":2976,"mtime":1608754543636,"results":"22","hashOfConfig":"15"},{"size":1222,"mtime":1608749673791,"results":"23","hashOfConfig":"15"},{"size":802,"mtime":1608676682553,"results":"24","hashOfConfig":"15"},{"size":2451,"mtime":1608749137879,"results":"25","hashOfConfig":"15"},{"size":478,"mtime":1608692980464,"results":"26","hashOfConfig":"15"},{"size":2045,"mtime":1608757026921,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"30rk0l",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/index.js",[],["56","57"],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/App.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/reportWebVitals.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/pages/NotFound.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/pages/Main.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/context/MyProvider.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/context/MyContext.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/components/CpfList.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/components/Header.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/pages/Welcome.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/components/FormCpf.js",["58"],"import React , { useState, useContext, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport MyContext from '../context/MyContext';\nimport CpfService from '../services/CpfService';\n\nfunction FormCpf() {\n\n  const { id } = useParams();\n  const history = useHistory()\n\n  const { cpf, getAllCpf } = useContext(MyContext);\n\n  const INIT_CPF = {\n    id: '',\n    name: '',\n    cpf: '',\n  }\n  const [ myCpf, setMyCpf ] = useState(INIT_CPF);\n\n  useEffect(() => {\n    if (id) {\n      const cpfFiltered = cpf.filter((item) => item.id === parseInt(id));\n      setMyCpf(cpfFiltered[0]);\n    }\n  }, []);\n\n  async  function saveCpf() {\n    const service = new CpfService();\n    const { id, name, cpf } = myCpf;\n    const cpfToSave = { name, cpf }\n    let response = '';\n    if (id) {\n      response = await service.updateCpf(id, cpfToSave);    \n    } else {\n      response = await service.saveCpf(cpfToSave);\n    }\n\n    console.log(response)\n    if (response.status >= 200 && response.status <= 204) {\n      alert('CPF saved!');\n      getAllCpf();\n      history.push('/main')\n    }\n  }\n\n  return (\n    <div className=\"container-sm\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"bs-docs-section\">\n            <form>\n              <fieldset>\n                <div className=\"form-group\">\n                  <label htmlFor=\"InputName\">Name</label>\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"InputName\"\n                    placeholder=\"Enter name\"\n                    value={myCpf.name}\n                    onChange={ (e) => setMyCpf({...myCpf, name: e.target.value})}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"InputCpf\">CPF</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"InputCpf\"\n                    placeholder=\"Enter CPF\"\n                    value={myCpf.cpf}\n                    onChange={ (e) => setMyCpf({...myCpf, cpf: e.target.value})}\n                  />\n                </div>\n\n                <button type=\"button\" className=\"btn btn-primary\" onClick={ saveCpf } >Save</button>\n              </fieldset>\n            </form>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormCpf;\n","/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/services/CpfService.js",[],"/home/ricardo/Dev/Projects-FrontEnd/app-react-cpf/src/services/ApiService.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":25,"column":6,"nodeType":"65","endLine":25,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cpf' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [cpf, id]",{"range":"72","text":"73"},[622,624],"[cpf, id]"]